from django.core.management.base import BaseCommand
import logging
from django.conf import settings
from django.contrib.auth import get_user_model
import requests

logger = logging.getLogger(__name__)
User = get_user_model()


class Command(BaseCommand):
    help = '–ü–æ–ª–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'

    def handle(self, *args, **options):
        self.stdout.write('üîç –ù–∞—á–∏–Ω–∞–µ–º –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...')

        # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        self.stdout.write('\n1. üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫...')
        if not settings.TELEGRAM_BOT_TOKEN:
            self.stdout.write(self.style.ERROR('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω!'))
            return
        self.stdout.write(self.style.SUCCESS('‚úÖ TELEGRAM_BOT_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω'))

        # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        self.stdout.write('\n2. üë• –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...')
        users_with_telegram = User.objects.filter(telegram_chat_id__isnull=False)
        self.stdout.write(f'–ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å Telegram: {users_with_telegram.count()}')

        for user in users_with_telegram:
            self.stdout.write(
                f'   üë§ {user.username}: chat_id={user.telegram_chat_id}, notifications={user.telegram_notifications}')

        if not users_with_telegram.exists():
            self.stdout.write(self.style.ERROR('‚ùå –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º Telegram!'))
            return

        # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram API
        self.stdout.write('\n3. üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram API...')
        try:
            url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/getMe"
            response = requests.get(url, timeout=10)
            if response.status_code == 200:
                bot_info = response.json()
                self.stdout.write(
                    self.style.SUCCESS(f'‚úÖ Telegram API —Ä–∞–±–æ—Ç–∞–µ—Ç. –ë–æ—Ç: {bot_info["result"]["username"]}'))
            else:
                self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ Telegram API: {response.status_code}'))
                return
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API: {e}'))
            return

        # –®–∞–≥ 4: –ü—Ä–æ–±–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        self.stdout.write('\n4. üì® –¢–µ—Å—Ç–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...')
        user = users_with_telegram.first()

        url = f"https://api.telegram.org/bot{settings.TELEGRAM_BOT_TOKEN}/sendMessage"
        payload = {
            'chat_id': user.telegram_chat_id,
            'text': 'üß™ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏',
            'parse_mode': 'HTML'
        }

        try:
            response = requests.post(url, json=payload, timeout=10)
            if response.status_code == 200:
                self.stdout.write(self.style.SUCCESS('‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!'))
                self.stdout.write('üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram, –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ')
            else:
                self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {response.status_code} - {response.text}'))
        except Exception as e:
            self.stdout.write(self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {e}'))

        self.stdout.write('\nüéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')